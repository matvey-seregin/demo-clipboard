
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриВставкеИзБуфераОбмена(Значение, СтандартнаяОбработка)
	
	Если Не ПерехватыватьВставку Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(Значение) = Тип("Картинка") Тогда
		Строка = ВставкиПользователя.Добавить();
		Строка.Имя = "Картинка";
		Строка.Адрес = ПоместитьВоВременноеХранилище(Значение);
	Иначе
		ВставитьКартикиИзФайлов(Значение);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКопирование_Таблица

&НаКлиенте
Процедура Копирование_ТаблицаПриИзменении(Элемент)
	НарисоватьДиаграмму();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура ВставкаИзБуфераОбмена(Команда)
	
	Если Не Ждать СредстваБуфераОбмена.ИспользованиеДоступно() Тогда
		Ждать ПредупреждениеАсинх("Использование буфера обмена недоступно");
		Возврат;
	КонецЕсли;
	
	ФорматДанных = СтандартныйФорматДанныхБуфераОбмена.Текст;
	Если Ждать СредстваБуфераОбмена.СодержитДанныеАсинх(ФорматДанных) Тогда
		Вставка_Текст = Ждать СредстваБуфераОбмена.ПолучитьДанныеАсинх(ФорматДанных);
	Иначе
		Вставка_Текст = "";
	КонецЕсли;
	
	ФорматДанных = СтандартныйФорматДанныхБуфераОбмена.HTML;
	Если Ждать СредстваБуфераОбмена.СодержитДанныеАсинх(ФорматДанных) Тогда
		Вставка_HTML = СобратьHTMLСтраницу(Ждать СредстваБуфераОбмена.ПолучитьДанныеАсинх(ФорматДанных));
	Иначе
		Вставка_HTML = "";
	КонецЕсли;
	
	ФорматДанных = СтандартныйФорматДанныхБуфераОбмена.Картинка;
	Если Ждать СредстваБуфераОбмена.СодержитДанныеАсинх(ФорматДанных) Тогда
		Картинка = Ждать СредстваБуфераОбмена.ПолучитьДанныеАсинх(ФорматДанных);
		Вставка_Картинка = ПоместитьВоВременноеХранилище(Картинка);
	Иначе
		Вставка_Картинка = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура КопироватьТаблицуВБуферОбмена(Команда)
	
	ДанныеТаблицы = Новый Массив;
	
	ДанныеСтроки = Новый Массив;
	ДанныеСтроки.Добавить("Товар");
	ДанныеСтроки.Добавить("Цена");
	
	ДанныеТаблицы.Добавить(ДанныеСтроки);
	
	Для Каждого Строка Из Копирование_Таблица Цикл
		
		ДанныеСтроки = Новый Массив;
		ДанныеСтроки.Добавить(Строка.Товар);
		ДанныеСтроки.Добавить(Строка.Цена);
		
		ДанныеТаблицы.Добавить(ДанныеСтроки);
		
	КонецЦикла;
	
	ЭлементыБуфера = Новый Массив;
	
	Если СредстваБуфераОбмена.ПоддерживаетсяФорматДанных(СтандартныйФорматДанныхБуфераОбмена.HTML) Тогда
		ЭлементыБуфера.Добавить(ЭлементБуфераИзТаблицыКакHTML(ДанныеТаблицы));
	КонецЕсли;
	
	Если СредстваБуфераОбмена.ПоддерживаетсяФорматДанных(СтандартныйФорматДанныхБуфераОбмена.Текст) Тогда
		ЭлементыБуфера.Добавить(ЭлементБуфераИзТаблицыКакТекст(ДанныеТаблицы));
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ЭлементыБуфера) Тогда
		Возврат;
	КонецЕсли;
	
	Ждать СредстваБуфераОбмена.ПоместитьДанныеАсинх(ЭлементыБуфера);
	
	ПоказатьОповещениеПользователя("Таблица скопирована");

КонецПроцедуры

&НаКлиенте
Асинх Процедура КопироватьДиаграммуКакКартинку(Команда)
	
	ФорматДанных = СтандартныйФорматДанныхБуфераОбмена.Картинка;
	
	Если Не СредстваБуфераОбмена.ПоддерживаетсяФорматДанных(ФорматДанных) Тогда
		Ждать ПредупреждениеАсинх("Копирование картинок не поддерживается.");
		Возврат;
	КонецЕсли;
	
	#Если ВебКлиент Тогда
		Картинка = КартинкаДиаграммы();
	#Иначе
		Картинка = Копирование_Диаграмма.ПолучитьКартинку(800, 600);
	#КонецЕсли
	
	ЭлементБуфера = Новый ЭлементБуфераОбмена(ФорматДанных, Картинка);
		
	Ждать СредстваБуфераОбмена.ПоместитьДанныеАсинх(ЭлементБуфера);
	
	ПоказатьОповещениеПользователя("Диаграмма скопирована");
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура КопироватьСтрокиИзТаблицы(Команда)
	
	ВыделенныеСтроки = Элементы.Копирование_Таблица.ВыделенныеСтроки;
	
	СтрокиТаблицыВXML = СтрокиТаблицыВXML(ВыделенныеСтроки);
	
	ЭлементБуфера = Новый ЭлементБуфераОбмена("text/xml", ПолучитьДвоичныеДанныеИзСтроки(СтрокиТаблицыВXML));
	
	Ждать СредстваБуфераОбмена.ПоместитьДанныеАсинх(ЭлементБуфера);
	
	ПоказатьОповещениеПользователя("Выбранные строки скопированы");
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ВставитьСтрокиИзТаблицы(Команда)
	
	Если Не Ждать СредстваБуфераОбмена.СодержитДанныеАсинх("text/xml") Тогда
		Возврат;
	КонецЕсли;
	
	СтрокиТаблицыВXML = ПолучитьСтрокуИзДвоичныхДанных(Ждать СредстваБуфераОбмена.ПолучитьДанныеАсинх("text/xml"));
	
	ВставитьСтрокиИзXML(СтрокиТаблицыВXML);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВставитьСтрокиИзXML(СтрокиТаблицыВXML)
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(СтрокиТаблицыВXML);	
	Копия = СериализаторXDTO.ПрочитатьXML(ЧтениеXML);
	ЧтениеXML.Закрыть();
	
	Для Каждого Строка Из Копия Цикл
		ЗаполнитьЗначенияСвойств(Копирование_Таблица.Добавить(), Строка);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция СтрокиТаблицыВXML(ВыделенныеСтроки)
	
	СтрокиДляКопирования = Новый Массив;
	
	Для Каждого ИдентификаторСтроки Из ВыделенныеСтроки Цикл
		СтрокиДляКопирования.Добавить(Копирование_Таблица.НайтиПоИдентификатору(ИдентификаторСтроки));
	КонецЦикла;
	
	Копия = Копирование_Таблица.Выгрузить(СтрокиДляКопирования);
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку();
	СериализаторXDTO.ЗаписатьXML(ЗаписьXML, Копия, НазначениеТипаXML.Явное);	
	Возврат ЗаписьXML.Закрыть();
	
КонецФункции

&НаКлиенте
Асинх Процедура ВставитьКартикиИзФайлов(СсылкиНаФайлы)
	
	Для Каждого СсылкаНаФайл Из СсылкиНаФайлы Цикл
		
		ИмяФайла = СсылкаНаФайл.Имя;
		
		Если Не СтрЗаканчиваетсяНа(ИмяФайла, ".png")
			И Не СтрЗаканчиваетсяНа(ИмяФайла, ".jpg")
			И Не СтрЗаканчиваетсяНа(ИмяФайла, ".jpeg")
			И Не СтрЗаканчиваетсяНа(ИмяФайла, ".bpm") Тогда
			Продолжить;
		КонецЕсли;
				
		Строка = ВставкиПользователя.Добавить();
		Строка.Имя = ИмяФайла;
		Строка.Адрес = ПоместитьВоВременноеХранилище(Ждать СсылкаНаФайл.ПолучитьКакДвоичныеДанныеАсинх());
				
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция КартинкаДиаграммы()
	Возврат Копирование_Диаграмма.ПолучитьКартинку(800, 600);
КонецФункции

&НаКлиенте
Процедура НарисоватьДиаграмму()
	
	Копирование_Диаграмма.Очистить();
	
	Точка = Копирование_Диаграмма.УстановитьТочку("Товар");
	
	Для Каждого Строка Из Копирование_Таблица Цикл
		Серия = Копирование_Диаграмма.УстановитьСерию(Строка.Товар);
		Копирование_Диаграмма.УстановитьЗначение(Точка, Серия, Строка.Цена);
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Функция ЭлементБуфераИзТаблицыКакHTML(ДанныеТаблицы)
	
	ЧастиРезультата = Новый Массив;
	ЧастиРезультата.Добавить("<table border=""2"">");
	
	ШаблонЯчейки = "<td>%1</td>";
	
	Для Каждого Строка Из ДанныеТаблицы Цикл
		
		ЧастиРезультата.Добавить("<tr>");
		
		Для Каждого Ячейка Из Строка Цикл
			ЧастиРезультата.Добавить(СтрШаблон(ШаблонЯчейки, Ячейка));
		КонецЦикла;		
		
		ЧастиРезультата.Добавить("</tr>");		
		
	КонецЦикла;
	
	ЧастиРезультата.Добавить("</table>");
	
	Результат = СтрСоединить(ЧастиРезультата, Символы.ПС);
	
	Возврат Новый ЭлементБуфераОбмена(СтандартныйФорматДанныхБуфераОбмена.HTML, Результат);
	
КонецФункции

&НаКлиенте
Функция ЭлементБуфераИзТаблицыКакТекст(ДанныеТаблицы)
	
	ЧастиРезультата = Новый Массив;
	
	Для Каждого Строка Из ДанныеТаблицы Цикл
		
		ЧастиРезультата.Добавить(СтрСоединить(Строка, Символы.Таб));		
		
	КонецЦикла;
	
	Результат = СтрСоединить(ЧастиРезультата, Символы.ПС);
	
	Возврат Новый ЭлементБуфераОбмена(СтандартныйФорматДанныхБуфераОбмена.Текст, Результат);
	
КонецФункции

&НаКлиенте
Функция СобратьHTMLСтраницу(Тело)
	
	Шаблон = 
		"<!DOCTYPE html>
		|<html>
		|  <head>    
		|  </head>
		|  <body>
		|    %1
		|  </body>
		|</html>";
		
	Возврат СтрШаблон(Шаблон, Тело);
		
КонецФункции

#КонецОбласти
